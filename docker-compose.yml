version: '3'

networks:
  front:
  api:
  storage:

services:
  gateway:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "${EXTERNAL_PORT}:80"
    networks:
      - default
      - front
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      DEFAULT_HOST: app.local

  # app
  app_revproxy:
    build: ./app/network
    networks:
      - front
      - api
    environment:
      VIRTUAL_HOST: app.local
      DEPLOYMENT_TIER: development
    volumes:
      - ./app/network/nginxconf.py:/nginxconf.py
    expose:
      - 80
  app_production:
    image: nginx:alpine
    networks:
      - front
    expose:
      - 80
      - 443
    volumes:
      - ./app/dist:/usr/share/nginx/html
  app_development:
    build: ./images/js-base
    container_name: app_dev
    networks:
      - front
    volumes:
      - ./app:/www
      - /www/node_modules
    expose:
      - 3000

  api:
    networks:
      - api
      - storage
    image: python:alpine
    volumes:
      - ./api:/www
    working_dir: /www
    command: python -m http.server 80
    expose:
      - 80
  db:
    build: ./db
    container_name: db
    networks:
      - storage
    expose:
      - 3306
    volumes:
      - /var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/sequelize:/sequelize
    environment:
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --lower-case-table-names=1
