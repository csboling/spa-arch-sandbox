version: '3'

networks:
  front:
  api:

services:
  gateway:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "${EXTERNAL_PORT}:80"
    networks:
      - default
      - front
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      DEFAULT_HOST: app.local

  # app
  app_revproxy:
    build: ./app/network
    networks:
      - front
      - api
    environment:
      VIRTUAL_HOST: app.local
      DEPLOYMENT_TIER: development
    volumes:
      - ./app/network/nginxconf.py:/nginxconf.py
    expose:
      - 80
  app_production:
    image: nginx:alpine
    networks:
      - front
    expose:
      - 80
      - 443
    volumes:
      - ./app/dist:/usr/share/nginx/html
  app_development:
    build: ./images/js-base
    container_name: app_dev
    networks:
      - front
    volumes:
      - ./app:/www
      - /www/node_modules
    expose:
      - 3000

  api:
    image: nginx:alpine
    networks:
      - api
    volumes:
      - ./api/network/nginx.conf:/etc/nginx/nginx.conf
    expose:
      - 80
  api_python:
    build: ./images/py-base
    volumes:
      - ./api/python:/src
    expose:
      - 5000
    networks:
      - api
    environment:
      MODULENAME: api
  api_node:
    build: ./images/js-base
    networks:
      - api
    volumes:
      - ./api/node:/www
    working_dir: /www
    expose:
      - 80

  db:
    build: ./db
    container_name: db
    networks:
      - api
    expose:
      - 3306
    volumes:
      - /var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/sequelize:/sequelize
    environment:
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --lower-case-table-names=1
